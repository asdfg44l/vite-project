/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-auto-import
export {}
declare global {
  const DialogGroup: typeof import('./src/components/Modal/DialogGroup.vue')['default']
  const EffectScope: typeof import('vue')['EffectScope']
  const FieldContextKey: typeof import('vee-validate')['FieldContextKey']
  const FormContextKey: typeof import('vee-validate')['FormContextKey']
  const Greeting: typeof import('./src/components/Greeting.vue')['default']
  const TIcon: typeof import('./src/components/TIcon.vue')['default']
  const TestFunctional: typeof import('./src/components/Functional/TestFunctional.js')['default']
  const computed: typeof import('vue')['computed']
  const configure: typeof import('vee-validate')['configure']
  const createApp: typeof import('vue')['createApp']
  const createLogger: typeof import('vuex')['createLogger']
  const createNamespacedHelpers: typeof import('vuex')['createNamespacedHelpers']
  const createStore: typeof import('vuex')['createStore']
  const customRef: typeof import('vue')['customRef']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const defineRule: typeof import('vee-validate')['defineRule']
  const effectScope: typeof import('vue')['effectScope']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const h: typeof import('vue')['h']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const mapActions: typeof import('vuex')['mapActions']
  const mapGetters: typeof import('vuex')['mapGetters']
  const mapMutations: typeof import('vuex')['mapMutations']
  const mapState: typeof import('vuex')['mapState']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeRouteLeave: typeof import('vue-router')['onBeforeRouteLeave']
  const onBeforeRouteUpdate: typeof import('vue-router')['onBeforeRouteUpdate']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useAttrs: typeof import('vue')['useAttrs']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useField: typeof import('vee-validate')['useField']
  const useFieldArray: typeof import('vee-validate')['useFieldArray']
  const useFieldError: typeof import('vee-validate')['useFieldError']
  const useFieldValue: typeof import('vee-validate')['useFieldValue']
  const useForm: typeof import('vee-validate')['useForm']
  const useFormErrors: typeof import('vee-validate')['useFormErrors']
  const useFormValues: typeof import('vee-validate')['useFormValues']
  const useHttp: typeof import('@/plugins/axios')['useHttp']
  const useIsFieldDirty: typeof import('vee-validate')['useIsFieldDirty']
  const useIsFieldTouched: typeof import('vee-validate')['useIsFieldTouched']
  const useIsFieldValid: typeof import('vee-validate')['useIsFieldValid']
  const useIsFormDirty: typeof import('vee-validate')['useIsFormDirty']
  const useIsFormTouched: typeof import('vee-validate')['useIsFormTouched']
  const useIsFormValid: typeof import('vee-validate')['useIsFormValid']
  const useIsSubmitting: typeof import('vee-validate')['useIsSubmitting']
  const useLink: typeof import('vue-router')['useLink']
  const useResetForm: typeof import('vee-validate')['useResetForm']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useSlots: typeof import('vue')['useSlots']
  const useStore: typeof import('vuex')['useStore']
  const useSubmitCount: typeof import('vee-validate')['useSubmitCount']
  const useSubmitForm: typeof import('vee-validate')['useSubmitForm']
  const useTForm: typeof import('./src/components/Form/_useTForm.js')['useTForm']
  const useValidateField: typeof import('vee-validate')['useValidateField']
  const useValidateForm: typeof import('vee-validate')['useValidateForm']
  const validate: typeof import('vee-validate')['validate']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, InjectionKey, PropType, Ref, VNode } from 'vue'
}
